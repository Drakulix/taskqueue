initSidebarItems({"enum":[["Error",""],["c_void","Type used to construct void pointers for use with C.This type is only useful as a pointer target. Do not use it as a return type for FFI functions which have the `void` return type in C. Use the unit type `()` or omit the return type instead.For LLVM to recognize the void pointer type and by extension functions like malloc(), we need to have it represented as i8* in LLVM bitcode. The enum used here ensures this. We need two variants, because the compiler complains about the `repr` attribute otherwise."]],"fn":[["from_ffi",""]],"macro":[["convert_ioctl_res!","Convert raw ioctl return value to a Nix result"],["io!","Encode an ioctl command that has no associated data."],["ioc!","Encode an ioctl command."],["ioctl!","Declare a wrapper function around an ioctl."],["ior!","Encode an ioctl command that reads."],["iorw!","Encode an ioctl command that both reads and writes."],["iow!","Encode an ioctl command that writes."]],"mod":[["errno",""],["fcntl",""],["features",""],["mount",""],["mqueue","Posix Message Queue functionsFurther reading and details on the C API"],["sched",""],["sys",""],["unistd","Standard symbolic constants and types"]],"trait":[["NixPath",""]],"type":[["Result",""],["c_int",""]]});